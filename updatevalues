Sub UpdateImportedPages()
    ' Declare variables
    Dim inputSheet As Worksheet ' Worksheet containing input data (Input Rates page)
    Dim clientSheet As Worksheet ' Worksheet containing imported sheet names (CLIENTS sheet)
    Dim importedSheet As Worksheet ' Current imported sheet being updated
    Dim inputLastRow As Long, importedLastRow As Long, clientLastRow As Long ' Last rows
    Dim inputRow As Long, importedRow As Long ' Row counters
    Dim matchValue As String ' Value from Input Rates to match with imported sheets
    Dim secondaryMatchValue As String ' Secondary value to match if primary fails
    Dim fieldToUpdate As String ' Value from "Field to Update" column
    Dim importedSheetName As String ' Name of the current imported sheet being processed
    Dim clientRow As Long ' Row counter for the CLIENTS sheet
    Dim matchFound As Boolean ' Boolean to track if a match was found
    Dim log As String ' Log to summarize changes
    Dim changesCount As Integer ' Count of rows updated

    ' Initialize the log and counters
    log = "Change Summary:" & vbNewLine & String(40, "-") & vbNewLine
    changesCount = 0

    ' Define the input and client sheets
    Set inputSheet = ThisWorkbook.Sheets("Input Rates")
    Set clientSheet = ThisWorkbook.Sheets("CLIENTS")

    ' Find the last row in Input Rates sheet
    inputLastRow = inputSheet.Cells(inputSheet.Rows.Count, "B").End(xlUp).Row
    ' Find the last row in CLIENTS sheet (column A contains the names of imported sheets)
    clientLastRow = clientSheet.Cells(clientSheet.Rows.Count, "A").End(xlUp).Row

    ' Loop through each imported sheet listed in the CLIENTS sheet
    For clientRow = 2 To clientLastRow ' Start at row 2 to skip the header
        importedSheetName = Trim(clientSheet.Cells(clientRow, "A").Value) ' Get the imported sheet name

        ' Check if the sheet exists in the workbook
        On Error Resume Next
        Set importedSheet = ThisWorkbook.Sheets(importedSheetName)
        On Error GoTo 0

        If Not importedSheet Is Nothing Then
            ' Find the last row in the imported sheet
            importedLastRow = importedSheet.Cells(importedSheet.Rows.Count, "B").End(xlUp).Row

            ' Loop through each row in the Input Rates sheet
            For inputRow = 2 To inputLastRow ' Start at row 2 to skip the header
                ' Skip rows where column B is empty
                If Trim(inputSheet.Cells(inputRow, "B").Value) = "" Then
                    log = log & "Skipped row " & inputRow & " in Input Rates (B is empty)." & vbNewLine
                    GoTo NextInputRow
                End If

                matchValue = Trim(inputSheet.Cells(inputRow, "B").Value) ' Primary key: column B
                secondaryMatchValue = Trim(inputSheet.Cells(inputRow, "E").Value) ' Secondary key: column E
                fieldToUpdate = Trim(inputSheet.Cells(inputRow, "F").Value) ' Get the "Field to Update" value

                matchFound = False ' Reset matchFound flag for this row

                ' Loop through each row in the imported sheet
                For importedRow = 2 To importedLastRow ' Start at row 2 to skip the header
                    ' Check primary key first (column B of imported sheet)
                    If Trim(importedSheet.Cells(importedRow, "B").Value) = matchValue Then
                        matchFound = True
                    ' If primary key doesn't match, try secondary key
                    ElseIf Trim(importedSheet.Cells(importedRow, "B").Value) = secondaryMatchValue Then
                        matchFound = True
                    End If

                    ' If a match is found, update the relevant fields
                    If matchFound Then
                        Select Case fieldToUpdate
                            Case "Receive (Float) Rate"
                                ' Update column T in the imported sheet with column G from Input Rates
                                importedSheet.Cells(importedRow, "T").Value = inputSheet.Cells(inputRow, "G").Value
                                log = log & "Sheet: " & importedSheetName & " | Row: " & importedRow & _
                                      " | Updated T with " & inputSheet.Cells(inputRow, "G").Value & vbNewLine
                                changesCount = changesCount + 1

                            Case "Previous Trade ID, Pay (Fixed) and Receive (Float) Rates"
                                ' Update columns T and N in the imported sheet with columns G and H from Input Rates
                                importedSheet.Cells(importedRow, "T").Value = inputSheet.Cells(inputRow, "G").Value
                                importedSheet.Cells(importedRow, "N").Value = inputSheet.Cells(inputRow, "H").Value
                                log = log & "Sheet: " & importedSheetName & " | Row: " & importedRow & _
                                      " | Updated T with " & inputSheet.Cells(inputRow, "G").Value & _
                                      " | Updated N with " & inputSheet.Cells(inputRow, "H").Value & vbNewLine
                                changesCount = changesCount + 1

                            Case Else
                                ' If no valid field is defined, do nothing
                        End Select

                        Exit For ' Exit the imported sheet loop since the match has been processed
                    End If
                Next importedRow

NextInputRow:
            Next inputRow
        Else
            ' Log if a sheet listed in CLIENTS does not exist
            log = log & "Sheet: " & importedSheetName & " does not exist in the workbook." & vbNewLine
        End If

        ' Clear the reference to the sheet to ensure it resets for the next iteration
        Set importedSheet = Nothing
    Next clientRow

    ' Add summary to the log
    log = log & vbNewLine & "Total Changes Made: " & changesCount & vbNewLine

    ' Display the log in a pop-up message
    MsgBox log, vbInformation, "Change Summary"
End Sub
